const cds = require('../../_runtime/cds')
const { Request } = cds

const readAfterWrite = async (req, srv, query) => {
  // gracefully set location and no body if no read auth or not readable capability
  let result
  try {
    const _req = new Request({ query, event: 'READ', _: req._, params: req.params })
    result = await srv.dispatch(_req)
    // NEW/PATCH must not include DraftAdministrativeData_DraftUUID for plain v4 usage, however required for odata-v2
    if (result && req.target._isDraftEnabled && req.headers?.['x-cds-odata-version'] !== 'v2') {
      delete result.DraftAdministrativeData_DraftUUID
    }
  } catch (e) {
    // read was not possible because of access restrictions => ignore
    if (!(Number(e.code) in { 401: 1, 403: 1, 404: 1, 405: 1 })) throw e
    result = null
  }

  return result
}

module.exports = readAfterWrite
