const getTemplate = require('./template')
const templateProcessor = require('./templateProcessor')

const _pick = element => {
  return element._type in { 'cds.Decimal': 1, 'cds.Integer64': 1 }
}

const _processorFn = () => elementInfo => {
  const { row, key } = elementInfo
  if (typeof row?.[key] !== 'number') return
  row[key] = `${row[key]}`
}

const ensureIEEE754 = (target, service, result) => {
  const { model } = service
  if (!target || !result || !model || !model.definitions[target.name]) return

  const template = getTemplate('ensureIEEE754', service, target, { pick: _pick })
  if (template.elements.size === 0) return

  if (typeof result === 'object' && result != null) {
    const processFn = _processorFn()
    for (const row of Array.isArray(result) ? result : [result]) {
      templateProcessor({ processFn, row, template })
    }
  }
}

module.exports = ensureIEEE754
