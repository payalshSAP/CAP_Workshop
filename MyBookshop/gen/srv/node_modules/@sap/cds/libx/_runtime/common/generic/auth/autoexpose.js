const cds = require('../../../../../lib')

function noah_handler(req) {
  const target = req.target
  if (!target) return

  // direct changes to draft administrative data is forbidden
  if (target.name.match(/\.DraftAdministrativeData$/) && req.event !== 'READ') {
    req.reject(405, 'ENTITY_IS_AUTOEXPOSE_READONLY', [target.name])
  }

  // if draft enabled, allow direct access
  if (target._isDraftEnabled || !target['@cds.autoexposed']) return

  if (target['@cds.autoexpose']) {
    if (req.event === 'READ') return //> allow read for value help requests
    req.reject(405, 'ENTITY_IS_AUTOEXPOSE_READONLY', [target.name])
  }

  // here, we are autoexposed (i.e., a composition)
  // -> reject all direct changes (i.e., only via navigation is allowed)
  if (req.subject?.ref.length === 1) req.reject(405, 'ENTITY_IS_AUTOEXPOSED', [target.name])
}

const _isAutoexposed = entity => {
  if (!entity) return false
  return (entity['@cds.autoexpose'] && entity['@cds.autoexposed']) || entity.name.match(/\.DraftAdministrativeData$/)
}

// REVISIT: To be deleted after okra is removed
function okra_handler(req) {
  const isAutoexposed = _isAutoexposed(req.target)
  if (isAutoexposed && req.event !== 'READ') {
    req.reject(405, 'ENTITY_IS_AUTOEXPOSE_READONLY', [req.target.name])
  }
}

const handler = cds.env.features.odata_new_adapter ? noah_handler : okra_handler
handler._initial = true

module.exports = handler
