const cds = require('../../cds')

const _getStreamingProperties = elements => {
  const result = []
  for (const key in elements) {
    const element = elements[key]
    if (typeof element['@Core.MediaType'] === 'object') {
      result.push({ stream: key, type: element['@Core.MediaType']['='] })
    }
  }

  return result
}

const _getMediaTypeValue = () => {
  const ctx = cds.context
  return (
    !ctx?.http?.req?.headers?.['content-type']?.match(/json|multipart/i) && ctx?.http?.req?.headers?.['content-type']
  )
}

function _addContentType(req, mtValue) {
  if (!req.data) return
  const streamProp = _getStreamingProperties(req.target.elements).find(prop => req.data[prop.stream])
  if (streamProp) req.data[streamProp.type] = mtValue
}

async function addContentType(req) {
  if (!req.query || !req.target) return
  const mtValue = _getMediaTypeValue()
  if (!mtValue) return

  _addContentType(req, mtValue)
}

module.exports = cds.service.impl(function () {
  this.before(['PATCH', 'UPDATE'], '*', addContentType)
})
