const cds = require('../../cds')

// REVISIT: This is a perfect example of the expensive-check-before-doing anti pattern
const containsAnyRestrictions = srv => {
  const accessRestrictions = getAccessRestrictions(srv)
  if (accessRestrictions.length > 1 || accessRestrictions[0] !== 'any') return true

  const entities = srv.entities
  const entitiesKeys = Object.keys(entities)

  return !!(
    entitiesKeys.some(entity => entities[entity]['@requires'] || entities[entity]['@restrict']) ||
    entitiesKeys.some(entity => {
      const actions = entities[entity].actions
      actions && Object.keys(actions).some(action => actions[action]['@requires'] || actions[action]['@restrict'])
    }) ||
    Object.keys(srv.operations).some(
      operation => srv.operations[operation]['@requires'] || srv.operations[operation]['@restrict']
    )
  )
}

const getAccessRestrictions = srv => {
  let restrictions = srv.definition['@restrict'] || srv.definition['@requires']
  if (restrictions) {
    if (typeof restrictions === 'string') return [restrictions]
    return restrictions.map(r => r.to || r).flat()
  } else {
    if (cds.env.requires.auth.restrict_all_services === false) return ['any']
    if (process.env.NODE_ENV !== 'production') return ['any']
    return ['authenticated-user']
  }
}

module.exports = {
  containsAnyRestrictions,
  getAccessRestrictions
}
